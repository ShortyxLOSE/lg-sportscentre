{"config":{"help":{"format":"vb","split":true},"name":"Duthie Bot","prefix":"-lg","token":""},"messages":{"_core":{"guild":{"joined":"Joining ${guild.name}, now active on ${client.guilds.size} guild${client.guilds.size != 1?'s' :''}","left":"Leaving ${guild.name}, now active on ${client.guilds.size} guild${client.guilds.size != 1?'s' :''}"},"permissionDenied":"I'm sorry, ${message.author.username}, but you aren't allowed to do that","start":"node.js v${process.version.replace(/^v+/g, '')}\ndiscord.js v${Discord.version.replace(/^v+/g, '')}\n\nStarted ${app.config.name} v${pkg.version.replace(/^v+/g, '')}, active on ${client.guilds.size} guild${client.guilds.size != 1?'s' :''}"},"games":{"loss":"The _${our.name}_ have been defeated by the _${their.name}_ by the score of _${their.score} to ${our.score}_.","tie":"The ${our.name} have tied the ${their.name} by the score of ${our.score} to ${their.score}.","win":"**The ${our.name} have defeated the ${their.name} by the score of ${our.score} to ${their.score}!**"},"help":{"_help":"Hello ${message.author.username}! Here is what you need to know about ${app.config.name}:\n\n# PING\n  Sends a ping command to make sure ${app.config.name} is alive and well\n\n# UNWATCH\n  For more information, type:${app.config.prefix} unwatch help\n\n# WATCH\n  For more information, type:${app.config.prefix} watch help","unwatch":"Hello ${message.author.username}! Here is what you need to know about ${app.config.prefix} unwatch:\n\n# SYNTAX\n  ${app.config.prefix} unwatch <type>[ <league>[ <team>]]\n\n# TYPE (required)\n  There are currently 9 valid types:\n      * all       - an alias for all other types:bids, contracts, draft, games, news, trades, waivers\n      * all-news  - an alias for all other news types:bids, contract, draft, news, trades, waivers\n      * bids      - announces any winning bids that match your league and/or team filters\n      * contracts - announces any new contracts that match your league and/or team filters\n      * draft     - announces any new draft picks that match your league and/or team filters\n      * games     - announces any updated game scores that match your league and/or team filters\n      * news      - announces any news items that don't fit any other type, passes through the ${app.config.name} news filter, and that matches your league and/or team filters\n      * trades    - announces any trades that match your league and/or team filters\n      * waivers   - announces any players placed on or claimed off waivers that match your league and/or team filters\n\n# LEAGUE (optional*)\n  The league argument is optional when deregistering a watcher. If omitted, all watchers that match the other arguments will be removed. To specify a league, simple enter the league's id or name found on LeagueGaming.com. The leagues currently supported by ${app.config.name} are:\n      * ${Object.keys(leagues).map(id => {return `${(leagues[id].name + ' '.repeat(13)).substr(0,13)} (id:${leagues[id].id})`}).join(\"\\n      * \")}\n\n  If specifying a league by name, be sure to wrap it in quotes (ex:\"LGHL PSN\") or remove any spaces (ex:LGHLPSN).\n\n# TEAM (optional)\n  The team argument is optional when deregistering a watcher. If omitted, all watchers that match the other arguments will be removed. To specify a team, simple enter the team's id or name found on LeagueGaming.com. Some examples of these are:\n      * ${Object.keys(teams).slice(0,5).map(id => {return `${(teams[id].name + ' '.repeat(27)).substr(0,27)} (id:${teams[id].id})`}).join(\"\\n      * \")}\n\n  If specifying a team by name, be sure to wrap it in quotes (ex:\"Toronto Maple Leafs\") or remove any spaces (ex:TorontoMapleLeafs).","watch":"Hello ${message.author.username}! Here is what you need to know about ${app.config.prefix} watch:\n\n# SYNTAX\n  ${app.config.prefix} watch <type> <league>[ <team>[ <channel>]]\n\n# TYPE (required)\n  There are currently 9 valid types:\n      * all       - an alias for all other types:bids, contracts, draft, games, news, trades, waivers\n      * all-news  - an alias for all other news types:bids, contracts, draft, news, trades, waivers\n      * bids      - announces any winning bids that match your league and/or team filters\n      * contracts - announces any new contracts that match your league and/or team filters\n      * draft     - announces any new draft picks that match your league and/or team filters\n      * games     - announces any updated game scores that match your league and/or team filters\n      * news      - announces any news items that don't fit any other type, passes through the ${app.config.name} news filter, and that matches your league and/or team filters\n      * trades    - announces any trades that match your league and/or team filters\n      * waivers   - announces any players placed on or claimed off waivers that match your league and/or team filters\n\n# LEAGUE (required)\n  To register a watcher with ${app.config.name}, you must specify a supported league from LeagueGaming.com. ${app.config.name} does not support leagueless watchers at this time. To specify a league, simply enter the league's id or name found on LeagueGaming.com. The leagues currently supported by ${app.config.name} are:\n      * ${Object.keys(leagues).map(id => {return `${(leagues[id].name + ' '.repeat(13)).substr(0,13)} (id:${leagues[id].id})`}).join(\"\\n      * \")}\n\n  If specifying a league by name, be sure to wrap it in quotes (ex:\"LGHL PSN\") or remove any spaces (ex:LGHLPSN).\n\n# TEAM (optional*)\n  The team argument is optional for all types except games. ${app.config.name} does not support teamless game watchers. To specify a team, simply enter the team's id or name found on LeagueGaming.com. Some examples of these are:\n      * ${Object.keys(teams).slice(0,5).map(id => {return `${(teams[id].name + ' '.repeat(27)).substr(0,27)} (id:${teams[id].id})`}).join(\"\\n      * \")}\n\n  If specifying a team by name, be sure to wrap it in quotes (ex:\"Columbus Blue Jackets\") or remove any spaces (ex:ColumbusBlueJackets).\n\n# CHANNEL (optional)\n  If you want messages from this watcher sent to a specific channel, tag it at the end of the command. If none are specified, messages will be sent to the server's default channel."},"news":{"bidWon":"The ${team.name} have won bidding rights to ${player.name} with a bid of ${bid.amount}!","signed":"The ${team.name} have signed ${player.name} to a ${contract.length} season contract worth ${contract.salary} per season!"}}}